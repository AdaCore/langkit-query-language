//
//  Copyright (C) 2005-2025, AdaCore
//  SPDX-License-Identifier: GPL-3.0-or-later
//

package com.adacore.lkql_jit.built_ins;

import com.adacore.lkql_jit.nodes.LKQLNode;
import com.adacore.lkql_jit.nodes.expressions.Expr;
import com.adacore.lkql_jit.nodes.expressions.value_read.ReadParameter;
import com.oracle.truffle.api.Truffle;
import com.oracle.truffle.api.dsl.*;
import com.oracle.truffle.api.frame.FrameInstance;
import com.oracle.truffle.api.frame.FrameInstanceVisitor;
import com.oracle.truffle.api.source.SourceSection;

/** This node represents a base for all built-in functions body. */
@NodeChild(value = "argumentNodes", type = LKQLNode[].class)
@GenerateNodeFactory
public abstract class BuiltInBody extends Expr {

    // ----- Constructors -----

    /** Create a new expression for a built-in function. */
    protected BuiltInBody() {
        super(null);
    }

    // ----- Instance methods -----

    protected SourceSection getCallLocation() {
        return Truffle.getRuntime()
            .iterateFrames(
                new FrameInstanceVisitor<SourceSection>() {
                    @Override
                    public SourceSection visitFrame(FrameInstance frameInstance) {
                        var callnode = frameInstance.getCallNode();
                        if (callnode != null) {
                            return callnode.getEncapsulatingSourceSection();
                        }
                        return null;
                    }
                }
            );
    }

    // ----- Override methods -----

    @Override
    public String toString(int indentLevel) {
        return "BUILT_IN NODE";
    }

    // ----- Inner classes -----

    /** Create a BuiltInBody instance from a node factory. */
    public static BuiltInBody create(NodeFactory<? extends BuiltInBody> factory) {
        // The builtin node factory is a class that is automatically generated by the Truffle DSL.
        // The signature returned by the factory reflects the signature of the @Specialization
        // methods in the builtin classes.

        int argumentCount = factory.getExecutionSignature().size();
        LKQLNode[] argumentNodes = new LKQLNode[argumentCount];

        // Builtin functions are like normal functions, i.e., the arguments are
        // passed in as an LKQLNode[] array. A ReadParameter extracts a parameter
        // from this array.

        for (int i = 0; i < argumentCount; i++) {
            argumentNodes[i] = new ReadParameter(null, i);
        }
        // Instantiate the builtin node. This node performs the actual functionality.
        return factory.createNode((Object) argumentNodes);
    }
}
