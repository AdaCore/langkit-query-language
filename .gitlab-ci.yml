include:
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/check-issue@~latest
    inputs:
      stage: checkstyle
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/pre-commit@~latest
    inputs:
      stage: checkstyle

stages:
  - checkstyle
  - test

pre-commit:
  services:
    - image:pe-base
    - cpu:8
    - mem:32
    - disk:50
  before_script:
    # Create a sandbox and install needed dependencies
    - generic_anod_ci
    - . /tmp/ci_env.sh
    # Define working variables
    - npm_cache=$PWD/npm_cache
    - npm_cache_install=$npm_cache/spotless-prettier-node-modules-fbb3f0657a1374078dbfdc0a3df68734
    - maven_local_repo=$(anod info maven-repo-pull -Qclient=lkql --show working_dir)/install
    - npmrc_file=$PWD/.npmrc

    # Echo vars to log information about the run
    - echo $npm_cache
    - echo $npm_cache_install
    - echo $maven_local_repo

    # Install all pre-commit dependencies
    - anod install gnatformat
    - anod build   java            -Q version=17,vendor=graalvm
    - anod build   maven           -Q version=3.6.3
    - anod build   nodejs          -Q version=16.19.1
    - anod build   maven-repo-pull -Q client=lkql
    - eval $(anod printenv gnatformat)
    - eval $(anod printenv java       -Q version=17,vendor=graalvm)
    - eval $(anod printenv maven      -Q version=3.6.3)
    - eval $(anod printenv nodejs     -Q version=16.19.1)
    - mkdir -p $npm_cache_install
    - e3-cathod thirdparty prettier_java-npm_cache-20250203.tar.gz --install $npm_cache_install --delete
    - ls $npm_cache_install
    - echo "offline=true" > $npmrc_file
    - export MAVEN_ARGS="-Dmaven.repo.local=$maven_local_repo -Dconfig.npmInstallCache=$npm_cache -Dconfig.npmrc=$npmrc_file"

# Common part for all testing CIs
.common-test-part: &common-test-part
  stage: test
  interruptible: true
  script:
    - generic_anod_ci
    - cat /tmp/ci_env.sh
    - . /tmp/ci_env.sh

    - anod run --plan .gitlab-ci.plan $PLAN_ENTRY
    - testsuite_reports
  artifacts:
    reports:
      junit: xunit-*.xml

# CIs that are run automatically on each merge request event
test:
  <<: *common-test-part
  services:
    - image:e3
    - cpu:8
    - mem:32
    - disk:100
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  parallel:
    matrix:
      - PLAN_ENTRY: [lkql_jit, lkql_native_jit]

# We also run the integration testsuite to make sure the MR is not breaking the
# GNATstudio integration.
integration-testsuite:
  <<: *common-test-part
  services:
    - image:systemgtk
    - cpu:8
    - mem:32
    - disk:100
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: manual
      allow_failure: true
  parallel:
    matrix:
      - PLAN_ENTRY: [integration_testsuite]

# CIs that are triggered manually
optional:
  <<: *common-test-part
  services:
    - image:e3
    - cpu:16
    - mem:32
    - disk:100
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      allow_failure: true
  timeout: 2 hours
  parallel:
    matrix:
      - PLAN_ENTRY: [gnatcheck_internal_testsuite]
