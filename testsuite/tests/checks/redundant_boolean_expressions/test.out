test.adb:4:4: rule violation: redundant boolean expression
4 |     if Cond then                --  FLAG
  | ____^
  ||
  || ~~~ 3 other lines ~~~
  ||
8 ||    end if;
  ||__________^

test.adb:10:4: rule violation: redundant boolean expression
10 |     if Cond then                --  FLAG
   | ____^
   ||
   || ~~~ 3 other lines ~~~
   ||
14 ||    end if;
   ||__________^

test.adb:16:10: rule violation: redundant boolean expression
16 |     X := (if Cond               -- FLAG
   | __________^
   ||
   || ~~~ 1 other lines ~~~
   ||
18 ||          else False);
   ||___________________^

test.adb:20:9: rule violation: redundant boolean expression
20 |    X := X = Standard.true;     --  FLAG
   |         ^^^^^^^^^^^^^^^^^

test.adb:22:7: rule violation: redundant boolean expression
22 |    if not (J > 1) then         --  FLAG
   |       ^^^^^^^^^^^

test.adb:30:10: rule violation: redundant boolean expression
30 |       if Y = True then    --  FLAG
   |          ^^^^^^^^

test.adb:35:11: rule violation: redundant boolean expression
35 |    return X = Standard.False;  --  FLAG
   |           ^^^^^^^^^^^^^^^^^^

Patched "test.adb":
===================

function Test (Cond : Boolean; J : Integer) return Boolean is
   X : Boolean;
begin
   X :=Cond ;return Cond ;X := (Cond               -- FLAG
         );

   X := X ;     --  FLAG

   if J <=1 then         --  FLAG
      null;
   end if;

   declare
      type Bool_N is new Boolean;
      Y : Bool_N;
   begin
      if Y then    --  FLAG
         J := 1;
      end if;
   end;

   return not X ;  --  FLAG
   return False;               --  NOFLAG
end Test;

