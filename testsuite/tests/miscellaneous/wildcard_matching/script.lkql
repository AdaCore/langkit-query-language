fun match_wildcard(str, pat) =
    |" Return whether the given string `str` matches the simple wildcard
    |" pattern `pat`. The pattern is an identifier with optionally a
    |" wildcard (`*`) character as the first character, last character or
    |" both.
    match pat
    | "^\*.*\*$" => str.contains(pat.substring(2, pat.length - 1))
    | "^\*"      => str.ends_with(pat.substring(2, pat.length))
    | "\*$"      => str.starts_with(pat.substring(1, pat.length - 1))
    | *          => str == pat

@check(message="")
fun do_nothing(node) = false

fun test_wildcard(str, pat) = {
    val matches = match_wildcard(str, pat);
    if matches then
        print(str & " matches " & pat)
    else
        print(str & " does not match " & pat)
}

test_wildcard("foo", "foo")
test_wildcard("foo", "*fo")
test_wildcard("foo", "*foo")
test_wildcard("foo", "*o")
test_wildcard("foo", "*bar")
test_wildcard("foo", "o*")
test_wildcard("foo", "fo*")
test_wildcard("foo", "*o*")
test_wildcard("foo", "*f*")