fun has_aspect(decl, aspect_name) =
   # TODO: using get_aspect assoc rt. get_aspect because get_aspect returns a
   # struct, not yet supported
   decl.get_aspect_assoc(aspect_name) != null

fun has_prepost(decl) =
   has_aspect(decl, "pre") or has_aspect(decl, "post")

fun result() =
   select decl @ BasicSubpDecl ( # Get subprogram declarations
      subp_spec_or_null() is AdaNode(primitive_subp_tagged_type() is AdaNode)
   ) # primitive of a tagged type
   when has_prepost(decl) # With direct pre/post aspect definitions
