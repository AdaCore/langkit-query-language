# Flag an overlay definition if it has neither the form of an attribute
# definition clause "for Overlaying'Address use Overlaid'Address;" nor the form
# of aspect definition "Address => Overlaid'Address", where Overlaid is an
# identifier defined either by an object declaration or a parameter
# specification.

import stdlib

fun check_nonoverlay(overlaid) =
    # Check overlaid'Address
    overlaid is not AttributeRef or
    not overlaid.f_attribute.p_name_is("address") or
    # Check that overlaid does NOT correspond to an object or parameter
    # specification.
    stdlib.ultimate_alias(overlaid.f_prefix, false)
    is not (ObjectDecl or ParamSpec)

@check(message="nonoverlay address specification",
       category="Style", subcategory="Programming Practice")
fun nonoverlay_address_specifications(node) =
    node is
        (AspectAssoc(f_id is id@Identifier, any parent(depth=3) is ObjectDecl
         when id.p_name_is("address") and check_nonoverlay (node.f_expr)))
    or AttributeDefClause(f_attribute_expr is at@AttributeRef
                          when at.f_attribute.p_name_is("address")
                           and at.f_prefix.p_referenced_decl() is ObjectDecl
                           and check_nonoverlay(node.f_expr))
