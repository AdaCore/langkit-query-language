# Flag discrete ranges that are a part of an index constraint, constrained
# array definition, or for-loop parameter specification, and whose bounds are
# both of type universal_integer. Ranges that have at least one bound of a
# specific type (such as 1 .. N, where N is a variable or an expression of
# non-universal type) are not flagged.

# In the context of a range constraint, a NumberDecl is always an int
fun is_universal_int(i) =
    i is IntLiteral or i is Name(p_referenced_decl() is NumberDecl)

@check(message="range with universal integer bounds", category="SPARK")
fun universal_ranges(node) =
    node is ((
        # index constraint or constrained array definition
        CompositeConstraint(p_is_index_constraint() is true)
        when node.f_constraints[1].f_constraint_expr
        is r@BinOp(f_op is OpDoubleDot)
            when is_universal_int(r.f_right) and is_universal_int(r.f_left)
    ) | (
        # range of a "for of" loop
        r@BinOp (parent is ForLoopSpec, f_op is OpDoubleDot)
        when is_universal_int(r.f_right) and is_universal_int(r.f_left)
    ))
