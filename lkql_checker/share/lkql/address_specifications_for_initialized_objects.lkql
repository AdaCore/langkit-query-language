@check(message="address specification for initialized object",
       category="Style", subcategory="Programming Practice")
fun address_specifications_for_initialized_objects(node) =
    |" Flag address clauses and address aspect definitions if they are applied
    |" to object declarations with explicit initializations.
    |"
    |" This rule has no parameters.
    |"
    |" .. rubric:: Example
    |"
    |" .. code-block:: ada
    |"    :emphasize-lines: 5
    |"
    |"    I : Integer := 0;
    |"    Var0 : Integer with Address => I'Address;
    |"
    |"    Var1 : Integer := 10;
    |"    for Var1'Address use Var0'Address;             --  FLAG
    # for X'Address use ...
    node is (a@AttributeDefClause(
        f_attribute_expr: AttributeRef(
            # Defined attribute is Address
            f_attribute: Name(p_name_is("Address"): true),
            # X has a default value
            f_prefix: Name(p_referenced_decl():
                             ObjectDecl(f_default_expr: not null))))
    # X := ... with Address => ...
    | AspectAssoc(
        # Associated aspect is Address
        f_id: Name(p_name_is("Address"): true),
        # X has a default value
        any parent: ObjectDecl(f_default_expr: not null))
    # for X use at xxx'Address
    | AtClause(f_expr: AttributeRef(f_attribute:
                                       Name(p_name_is("Address"): true)),
                # X has a default value
                f_name: Name(p_referenced_decl():
                               ObjectDecl(f_default_expr: not null))))
