# Flag all declarations of controlled types. 
#
# * A declaration of a private type is flagged if its full declaration 
#   declares a controlled type.
# * A declaration of a derived type is flagged if its ancestor type is
#   controlled. Subtype declarations are not checked.
# * A declaration of a type that itself is not a descendant of a type
#   declared in `Ada.Finalization' but has a controlled component is not
#   checked.

fun canonical_fully_qualified_name(t) =
    t.f_name?.p_basic_decl()?.p_canonical_fully_qualified_name()

selector complete_super_types
    | b@BaseTypeDecl when b.p_is_private() =>
        rec *this.p_next_part()?.p_base_types?()
    | BaseTypeDecl =>
        rec *this.p_base_types()
    | * => ()

@check(message="declaration of controlled type", category="Feature")
fun controlled_type_declarations(node) =
    node is BaseTypeDecl (
        any complete_super_types is b @ *
        when canonical_fully_qualified_name(b) == "ada.finalization.controlled"
    )
