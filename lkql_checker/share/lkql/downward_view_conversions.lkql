@check
fun downward_view_conversions() =
    select c @ CallExpr(
        # Select type conversions
        p_referenced_decl() is BaseTypeDecl(
            p_base_subtype() is target_type @ BaseTypeDecl(p_is_tagged_type() is true)
        )
    ) when {
        # Where the target type is derived from the type of the conversion
        # argument
        val argument_type = c.f_suffix[1].f_r_expr?.p_expression_type();
        target_type?.p_is_derived_type(argument_type)
    }
