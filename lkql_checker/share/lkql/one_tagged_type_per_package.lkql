@check(message="more than one tagged type declared in package spec",
       category="Style", subcategory="Program Structure")
fun one_tagged_type_per_package(node) =
    |" Flag all package declarations with more than one tagged type declaration
    |" in the visible part.
    |"
    |" .. rubric:: Example
    |"
    |" .. code-block:: ada
    |"    :emphasize-lines: 1
    |"
    |"    package P is  --  FLAG
    |"
    |"       type T is tagged null record;
    |"       type T2 is tagged null record;
    |"
    |"    end P;
    node is BasePackageDecl(f_public_part: *(f_decls: decls))
    when (from decls select t@BaseTypeDecl
          when t.p_is_tagged_type() and t.parent == decls).length > 1
