# Flag each generic actual parameter corresponding to a generic formal
# parameter with a default initialization, if positional notation is used.

fun param_pos(n, pos : int = 0) =
    if n == null then pos else param_pos(n?.previous_sibling, pos+1)

fun check_generic(n, node) =
    n?.p_referenced_decl()?.f_formal_part?.f_decls[param_pos(node)]?.
    f_decl?.f_default_expr != null

@check(message="use named notation when passing actual to defaulted generic parameter")
fun positional_actuals_for_defaulted_generic_parameters(node) =
    node is ParamAssoc(f_designator is null, parent is l@AssocList)
    when match l?.parent
          | p@GenericSubpInstantiation    =>
              check_generic(p?.f_generic_subp_name, node)
          | p@GenericPackageInstantiation =>
              check_generic(p?.f_generic_pkg_name, node)
          | *                             => false
