# Flag use of conditional expression.
# This rule has the parameter Except_Assertions: Do not flag a conditional
# expression if it is a subcomponent of the following constructs[...]

import stdlib

@check(message="conditional expression")
fun conditional_expressions(node, except_assertions=false) =
    node is CondExpr
    when (not except_assertions)
      or not ((node is *(any parent is p@Pragma
               when stdlib.is_assert_pragma(p.f_id?.p_canonical_text())))
              or node is *(any parent is a@AspectAssoc
                 when (match a.f_id
                       | id@Identifier   =>
                           stdlib.is_assert_aspect(id?.p_canonical_text())
                       | at@AttributeRef =>
                           at?.f_attribute?.p_canonical_text() == "class"
                       | *               => false)))
