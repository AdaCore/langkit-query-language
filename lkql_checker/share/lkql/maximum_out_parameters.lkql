# Flag any subprogram declaration, subprogram body declaration, expression
# function declaration, null procedure declaration, subprogram body stub or
# generic subprogram declaration if the corresponding subprogram has more than
# N formal [IN] OUT parameters, where N is a parameter of the rule.
# A subprogram body, an expression function, a null procedure or a subprogram
# body stub is flagged only if there is no separate declaration for this
# subprogram. Subprogram renaming declarations and subprogram instantiations,
# as well as declarations inside expanded generic instantiations are never
# flagged.

fun num_out_params(node) =
    |" Return the number of out parameters of a subprogram node
    (from node.f_subp_spec.f_subp_params.f_params
     select n@DefiningName
     when n.parent.parent.f_mode is (ModeOut or ModeInOut)).length

@unit_check(help="maximum number of subprogram OUT parameters")
fun maximum_out_parameters(unit, n: int = 3) = [
    {message: "too many formal OUT parameters (" & img(num_out_params(n)) & ")",
     loc: n.p_defining_name()}
    for n in from unit.root select
    node@(SubpBody or ExprFunction or NullSubpDecl or SubpBodyStub or
          ClassicSubpDecl)
    when (node is ClassicSubpDecl or node.p_previous_part() == null)
     and num_out_params(node) > n]
