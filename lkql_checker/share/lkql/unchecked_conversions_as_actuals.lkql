# Flag call to instantiation of Ada.Unchecked_Conversion if it is an actual in
# procedure or entry call or if it is a default value in a subprogram or entry
# parameter specification.

import stdlib

@unit_check(message="instance of Unchecked_Conversion as actual parameter",
            category="Style", subcategory="Programming Practice")
fun unchecked_conversions_as_actuals(unit) = [
    {message: "instance of Unchecked_Conversion as " &
              (if n is CallExpr(any parent is CallStmt)
               then "actual parameter" else "default parameter value"),
     loc: n}
    for n in from unit.root
    select node@CallExpr(any parent is CallStmt or SubpSpec)
    when stdlib.is_unchecked_conversion(
        stdlib.ultimate_subprogram_alias(node.p_referenced_decl())
    )]
