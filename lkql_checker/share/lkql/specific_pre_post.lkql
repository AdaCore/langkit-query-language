# Flag a declaration of a primitive operation of a tagged type if this
# declaration contains specification of Pre or/and Post aspect.

fun has_aspect(decl, aspect_name) =
   # TODO: using p_has_aspect() once it is fixed, see U328-004
   decl.p_get_aspect_assoc(aspect_name) != null

@check(message="definition of non class-wide aspect")
fun specific_pre_post(node) =
    node is BasicSubpDecl (
        # Get subprogram declarations
        p_subp_spec_or_null() is AdaNode(
            # primitive of a tagged type
            p_primitive_subp_tagged_type() is AdaNode))
    # with direct pre/post aspect definitions
    when has_aspect(node, "Pre") or has_aspect(node, "Post")
