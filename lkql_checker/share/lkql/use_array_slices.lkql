fun array_index(call, var) =
    call is CallExpr(
        f_suffix: l@AssocList
        when l.children_count == 1
         and l[1].f_r_expr is id@Identifier when id.p_name_matches(var),
        # p_kind does not always work, in particular on e.g. Arr (X)(Y) so
        # perform this test last
        p_kind(): "array_index")

@check(message="FOR loop may be replaced by an array slice",
       category="Style", subcategory="Programming Practice")
fun use_array_slices(node) =
    |" Flag ``for`` loops if a loop contains a single assignment statement, and
    |" this statement is an assignment between array components or between an
    |" array component and a constant value, and such a loop can
    |" be replaced by a single assignment statement with array slices or
    |" array objects as the source and the target of the assignment.
    |"
    |" .. rubric:: Example
    |"
    |" .. code-block:: ada
    |"    :emphasize-lines: 6, 10
    |"
    |"       type Table_Array_Type is array (1 .. 10) of Integer;
    |"       Primary_Table   : Table_Array_Type;
    |"       Secondary_Table : Table_Array_Type;
    |"
    |"    begin
    |"       for I in Table_Array_Type'Range loop   --  FLAG
    |"          Secondary_Table (I) := Primary_Table (I);
    |"       end loop;
    |"
    |"       for I in 2 .. 5 loop                   --  FLAG
    |"          Secondary_Table (I) := 1;
    |"       end loop;
    node is ForLoopStmt
    when node.f_stmts.children_count == 1
     and node.f_stmts[1] is stmt@AssignStmt
     when array_index(stmt.f_dest, node.f_spec.f_var_decl.f_id.f_name)
      and (stmt.f_expr.p_is_static_expr() or
           array_index(stmt.f_expr, node.f_spec.f_var_decl.f_id.f_name))
