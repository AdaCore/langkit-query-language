# Flag each occurrence of a subprogram body (if `subprogram` is true) or task
# body (if `task` is true) with no others exception handler, or any handled
# sequence of statements with exception handlers (if `all_handlers` is true)
# with no others handler.

fun check_others(stmts) =
    stmts.f_exceptions is AdaNodeList(all children(depth=3)
                                      is not OthersDesignator)

@unit_check(help="no OTHERS choice in exception handlers",
            category="Style", subcategory="Programming Practice")
fun no_others_in_exception_handlers(unit,
                                    all_handlers=false,
                                    subprogram=false,
                                    task=false) =
[
    (match n
     | TaskBody => {message: "no OTHERS exception handler in task", loc: n}
     | SubpBody => {message: "no OTHERS exception handler in subprogram",
                    loc: n}
     | *        => {message: "no OTHERS choice in exception handler",
                    loc: n.f_exceptions.token_start().previous()})
    for n in from unit.root select
        (node@((TaskBody when task) or (SubpBody when subprogram))
         when not node.f_stmts.f_exceptions[1] or check_others(node.f_stmts))
        or node@HandledStmts
           when all_handlers and node.f_exceptions[1] and
                check_others(node)
]
