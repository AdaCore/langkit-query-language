# Flag any tagged type declaration that has more than N user-defined primitive
# operations (counting both inherited and not overridden and explicitly
# declared, not counting predefined operators). Only types declared in visible
# parts of packages, generic packages and package instantiations are flagged.
# This rule has the parameter N: Positive integer specifying the maximal number
# of primitives when the type is not flagged.

@memoize
fun num_primitives(t) = t.p_get_primitives().length

@unit_check(help="tagged type has too many primitives",
            remediation="MAJOR",
            category="Style", subcategory="Object Orientation")
fun too_many_primitives(unit, n : int = 5) = [
    {message: "tagged type has too many primitives (" &
              img(num_primitives(n)) & ")",
     loc: n.p_defining_name()}
    for n in from unit.root through follow_generics
    select node@TypeDecl
    when node.p_is_tagged_type() and node.parent.parent is PublicPart
     and num_primitives(node) > n
]
