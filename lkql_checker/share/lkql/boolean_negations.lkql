# Flag any infix call to the predefined NOT operator for the predefined
# Boolean type if its argument is an infix call to a predefined relation
# operator or another call to the predefined NOT operator. Calls to NOT
# operators for the types derived from Standard.Boolean are not flagged.

import stdlib

fun strip_parentheses(node) =
    |" Skip any ParenExpr and return the enclosing expression
    if node is ParenExpr then strip_parentheses(node.f_expr) else node

@check(message="negation of boolean operator",
       category="Style", subcategory="Programming Practice")
fun boolean_negations(node) =
    node is UnOp(f_op is op@OpNot when stdlib.is_predefined_op(op))
    when stdlib.is_standard_boolean(node)
     and strip_parentheses(node.f_expr) is
         expr_op@(RelationOp | UnOp(f_op is OpNot))
         when stdlib.is_predefined_op(expr_op.f_op)
