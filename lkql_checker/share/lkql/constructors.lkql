import stdlib

@check(message="declaration of constructor function",
       category="Style", subcategory="Object Orientation")
fun constructors(node) =
    |" Flag any declaration of a primitive function of a tagged type that has a
    |" controlling result and no controlling parameter. If a declaration is a
    |" completion of another declaration then it is not flagged.
    |"
    |" .. rubric:: Example
    |"
    |" .. code-block:: ada
    |"    :emphasize-lines: 5-7
    |"
    |"    type T is tagged record
    |"       I : Integer;
    |"    end record;
    |"
    |"    function Fun (I : Integer) return T;                -- FLAG
    |"    function Bar (J : Integer) return T renames Fun;    -- FLAG
    |"    function Foo (K : Integer) return T is ((I => K));  -- FLAG
    node is (BasicSubpDecl |
             BaseSubpBody(p_previous_part(): null) |
             SubpBodyStub(p_previous_part(): null))
    # Get subprogram declarations that are primitive of a tagged type
    when node.p_subp_spec_or_null() is
         spec@BaseSubpSpec(p_primitive_subp_tagged_type(): BaseTypeDecl)
         when stdlib.is_constructor(spec)
