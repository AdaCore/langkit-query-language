# Flags a tagged derived type declaration or an interface type declaration if
# its depth (in its inheritance hierarchy) exceeds the value specified by the N
# rule parameter. Types in generic instantiations which violate this rule are
# also flagged; generic formal types are not flagged. This rule also does not
# flag private extension declarations. In the case of a private extension, the
# corresponding full declaration is checked.
# This rule has the parameter n: Integer not less than -1 specifying the
# maximal allowed depth of any inheritance hierarchy. If the rule parameter is
# set to -1, the rule flags all the declarations of tagged and interface types.

@check(message="derivation tree is too deep",
       follow_generic_instantiations=true,
       execution_cost=2)
fun deep_inheritance_hierarchies(node, n: int = 2) =
    node is TypeDecl(any super_types(depth=n+1) is *)
