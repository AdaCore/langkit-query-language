# Flag any `'Access' attribute reference if its prefix denotes an
# identifier defined by a local object declaration or a subcomponent
# thereof.
#
# An object declaration is considered as local if it is located
# anywhere except library-level packages or bodies of library-level
# packages (including packages nested in those). Here both package
# declarations and package instantiations are considered as packages.
#
# If the attribute prefix is a dereference or a subcomponent thereof, the
# attribute reference is not flagged.

# TODO: share local_scope
fun local_scope(e) =
    match e
        | SubpBody => true
        | TaskBody => true
        | BlockStmt => true
        | EntryBody => true
        | ProtectedBody => true
        | * => false

fun is_local_object(o) =
    o is ObjectDecl
    when [p for p in o?.parents if local_scope(p)].length > 0

@check(message="access attribute for local objects")
fun access_to_local_objects(node) =
    node is AttributeRef
    when node.f_attribute?.p_canonical_text() == "access"
    and  is_local_object(node.f_prefix?.p_referenced_decl())
