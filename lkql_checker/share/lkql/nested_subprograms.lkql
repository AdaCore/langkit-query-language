# Flag any subprogram declaration, subprogram body declaration, subprogram
# instantiation, expression function declaration or subprogram body stub that
# is not a completion of another subprogram declaration and that is declared
# within subprogram body (including bodies of generic subprograms), task body
# or entry body directly or indirectly (that is - inside a local nested
# package). Protected subprograms are not flagged. Null procedure declarations
# are not flagged. Procedure declarations completed by null procedure
# declarations are not flagged.

selector semantic_parent
    |" Return all semantic parent nodes starting from a given node.
    | null     => ()
    | *        => rec this.p_semantic_parent()

@check(message="subprogram declared in executable body",
       category="Style", subcategory="Programming Practice")
fun nested_subprograms(node) =
    node is (SubpBody or ExprFunction or SubpBodyStub or BasicSubpDecl or
             GenericSubpInstantiation)
    when (node is (BasicSubpDecl or GenericSubpInstantiation) or
          node.p_previous_part() is null or SubpBodyStub)
     and node.p_semantic_parent()
         is not (ProtectedTypeDecl or SingleProtectedDecl)
     and node is not ClassicSubpDecl(p_body_part() is NullSubpDecl)
     and node is *(any semantic_parent is BaseSubpBody or TaskBody or EntryBody)
