# Flag a library item or a subunit that immediately depends on more than N
# library units (N is a rule parameter). In case of a dependency on child
# units, implicit or explicit dependencies on all their parents are not
# counted.
# This rule has the N parameter: Positive integer specifying the maximal
# number of dependencies when the library item or subunit is not flagged.

fun num_deps(unit, node) = {
    val parent = node.p_semantic_parent();

    unique(concat([[p for p in w.f_packages.children
                    if p.p_referenced_decl() != parent].to_list
                   for w in (from unit.f_prelude select WithClause)].to_list))
    .length +
    (if unit.f_body is lib@LibraryItem and lib.f_item is body@Body and
        body.p_previous_part() is prev@AdaNode
     then num_deps(prev.parent.parent, node)
     else 0)
}

@check(message="unit has too many dependencies", remediation="MAJOR",
       category="Feature")
fun too_many_dependencies(node, n : int = 5) =
    node is (LibraryItem when num_deps(node.parent, node.f_item) > n) or
            Subunit when num_deps(node.parent, node) > n
