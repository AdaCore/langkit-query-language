# Flag loops using a generalized iterator where the iterator element type is
# subject to a Default_Initial_Condition aspect.

# TODO: move to stdlib once V831-024 is implemented
selector component_types
    |" Return all the BaseTypeDecl corresponding to all fields
    |" of a given type, including their full views, base types and subtypes.
    | TypeDecl(f_type_def is d@RecordTypeDef) =>
        skip *(from d select ComponentDecl)
    | TypeDecl(f_type_def is DerivedTypeDef(f_record_extension is
                                            def@BaseRecordDef)) =>
        skip *([this.p_base_type()] & (from def select ComponentDecl))
    | TypeDecl(f_type_def is DerivedTypeDef) => rec this.p_base_type()
    | TypeDecl(f_type_def is ArrayTypeDef)   => rec this.p_comp_type()
    | TypeDecl(f_type_def is PrivateTypeDef) => rec this.p_full_view()
    | SubtypeDecl                            => rec this.p_base_subtype()
    | ComponentDecl(f_component_def is ComponentDef(f_type_expr is
                    ind@SubtypeIndication))  =>
        rec ind.f_name.p_referenced_decl()
    | *                                      => ()

@check(message="possible occurrence of KP V712-039", impact="22.*")
fun kp_v712_039(node) =
    node is ForLoopStmt(
        f_spec is ForLoopSpec(f_iter_expr is Expr(
            p_expression_type() is TypeDecl(
                p_has_aspect("Iterable") is true,
                p_full_view() is TypeDecl(
                    any component_types is TypeDecl(
                        p_has_aspect("Default_Initial_Condition") is true))))))

