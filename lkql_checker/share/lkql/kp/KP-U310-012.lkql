# Flag functions returning an unconstrained type with either a postcondition
# or an invariant associated with the return type.

fun is_unconstrained(t) =
    t.f_type_def is
        ArrayTypeDef(f_indices: UnconstrainedArrayIndices) or
    t is ConcreteTypeDecl(f_discriminants: KnownDiscriminantPart)

@check(message="possible occurrence of KP U310-012")
fun kp_u310_012(node) =
    node is SubpSpec(f_subp_kind: SubpKindFunction)
    when node.p_return_type() is TypeDecl(p_full_view(): ret@TypeDecl)
     when is_unconstrained(ret)
      and (node.parent is BasicDecl(p_has_aspect("Post"): true) or
           ret.p_has_aspect("Type_Invariant"))
