# Flag calls returning (part of) discriminated records inside a loop parameter
# specification.

import stdlib

fun has_rec_with_discriminants(type) =
    type is TypeDecl and type.p_is_record_type() and type.f_discriminants != null

fun check_type(type) =
    type is BaseTypeDecl and
    (has_rec_with_discriminants(type) or
     type is *(any stdlib.component_types is t@BaseTypeDecl
               when has_rec_with_discriminants(t)))

fun check_subp(subp) =
    subp.f_subp_spec is spec@SubpSpec(f_subp_kind is SubpKindFunction)
    and check_type(stdlib.full_root_type(spec.f_subp_returns.
                   p_designated_type_decl()))

@check(message="possible occurrence of KP R410-028", impact="7.[123].*")
fun kp_r410_028(node) =
    node is BaseId(
        p_is_call() is true,
        any parent is ForLoopSpec,
        p_referenced_decl() is
            (decl@(ClassicSubpDecl or BaseSubpBody or SubpBodyStub)
             when check_subp(decl))
        or
            inst@GenericSubpInstantiation
            when check_subp(inst.p_designated_subp()))
