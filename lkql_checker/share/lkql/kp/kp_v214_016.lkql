# Flag instantiations of Ada.Tags.Generic_Dispatching_Constructor where the
# root type of the type hierarchy of parameter T is a limited tagged type with
# no task component and one of its derivation has some task component.

import stdlib

fun check_type(params) =
   [p for p in params if
      p.param.p_name_is("T") and
      p.actual.p_referenced_decl().p_root_type() is root@BaseTypeDecl when (
        root.f_type_def.f_has_limited.p_as_bool() and
        root is TypeDecl(all stdlib.component_types: not TaskTypeDecl) and
        [t for t in root.p_find_all_derived_types(stdlib.list_of_units()) if
         t is TypeDecl(any stdlib.component_types: TaskTypeDecl)]
      )
   ]

@check(message="possible occurrence of KP V214-016")
fun kp_v214_016(node) =
    node is GenericSubpInstantiation
    when stdlib.ultimate_designated_generic_subp(node)
               .p_fully_qualified_name() == "Ada.Tags.Generic_Dispatching_Constructor"
     and check_type(node.p_inst_params())
