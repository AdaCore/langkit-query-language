# Flag 'Access, 'Unchecked_Access, and 'Unrestricted_Access with prefixes
# given by overloaded protected subprograms.

import stdlib

fun is_access(attr) =
    attr.p_name_is("Access") or
    attr.p_name_is("Unchecked_Access") or
    attr.p_name_is("Unrestricted_Access")

@check(message="possible occurrence of KP T602-028", impact="20.*")
fun kp_t602_028(node) =
    # Look for '*Access
    node is AttributeRef
    when is_access(node.f_attribute)
     # where prefix is a protected subprogram
     and node.f_prefix.p_referenced_decl() is
         decl@SubpDecl(any parent: ProtectedDef)
     # and this subprogram is overloaded
     when decl.f_subp_spec.f_subp_name is name@DefiningName
      when (decl is *(any prev_siblings: sib@SubpDecl
                     when sib.f_subp_spec.f_subp_name.p_name_matches(name)) or
            decl is *(any next_siblings: sib@SubpDecl
                     when sib.f_subp_spec.f_subp_name.p_name_matches(name)))
