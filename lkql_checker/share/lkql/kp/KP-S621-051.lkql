# Flag subprogram formals of anonymous access types used as actuals in calls
# to nested subprograms.

import stdlib

@check(message="possible occurrence of KP S621-051", impact="19.*")
fun kp_s621_051(node) =
    node is ParamAssoc(
      parent: AssocList(parent: c@CallExpr(
          p_is_call(): true
        ) when c.f_name.p_referenced_decl() is decl@BasicDecl(
            p_has_aspect("Import"): false
          ) when stdlib.enclosing_body(decl) == stdlib.enclosing_body(node)
      ),
      
      f_r_expr: Name(
        p_referenced_decl(): ParamSpec,
	p_expression_type(): AnonymousTypeDecl(p_is_access_type(): true)
      )
    )
