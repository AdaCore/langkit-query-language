# Flag Size attributes on array objects whose type has an alignment clause
# (directly or via one of its parent) other than 1.

import stdlib

fun array_with_align(type) =
    type.p_is_array_type() and
    {
        val aspect = type.p_get_aspect("Alignment");
        aspect.exists and aspect.value.p_eval_as_int() > 1
    }

@check(message="possible occurrence of KP QC02-001",
       impact="7.[1-4].*,17.*,18.[12]",
       follow_generic_instantiations=true)
fun kp_qc02_001(node) =
    node is AttributeRef(parent: not AttributeDefClause)
    when node.f_attribute.p_name_is("Size")
     and node.f_prefix.p_expression_type() is t@BaseTypeDecl
     when t.p_full_view() is type@BaseTypeDecl
      when (array_with_align(type) or
            type is *(any stdlib.full_parent_types: p@BaseTypeDecl when array_with_align(p)))
