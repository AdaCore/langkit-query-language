# Flag conditional expressions part of a simple return statement or
# expression function, containing a call to a function returning a
# limited type

import stdlib

@check(message="possible occurrence of KP TA10-002")
fun kp_ta10_002(node) =
    node is CondExpr(any parent: ReturnStmt | ExprFunction)
    when (from node select first c@BaseId(p_is_call(): true)
          when c.p_expression_type() is BasicDecl(
              any stdlib.full_parent_types: TypeDecl(
                  f_type_def: RecordTypeDef(f_has_limited: LimitedPresent) |
                                InterfaceTypeDef(
                                    f_interface_kind: InterfaceKindLimited))))
