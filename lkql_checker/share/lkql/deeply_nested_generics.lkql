# Flag a generic declaration nested in another generic declaration if the
# nesting level of the inner generic exceeds the value specified by the
# `n' rule parameter.
#
# The nesting level is the number of generic declarations that enclose the
# given (generic) declaration.
#
# Formal packages are not flagged by this rule.

@memoized
fun generic_nesting(node) =
    |" Return the number of GenericDecl found in parents of node
    [p for p in node.parents(include_self=false) if p is GenericDecl].length

@unit_check(message="deeply nested generic",
            category="Style", subcategory="Program Structure")
fun deeply_nested_generics(unit, n: int = 5) = [
    {message: "deeply nested generic (" & img(generic_nesting(node)) & ")",
     loc: node.p_defining_name()}
    for node in from unit.root select decl@GenericDecl
    when generic_nesting(decl) > n]
