# Flag derived type declaration if the ultimate ancestor type is a predefined
# Ada type. Do not flag record extensions and private extensions. The rule is
# checked inside expanded generics.

import stdlib

@check(message="deriving from predefined type",
       follow_generic_instantiations=true,
       category="Style", subcategory="Programming Practice")
fun deriving_from_predefined_type(node) =
    node is DerivedTypeDef(f_has_with_private is WithPrivateAbsent,
                           f_record_extension is null)
    when stdlib.is_predefined_type(node.f_subtype_indication.f_name)
